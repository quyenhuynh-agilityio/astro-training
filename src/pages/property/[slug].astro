---
import BaseLayout from '@layouts/BaseLayout/index.astro';
import PropertyHeroSection from '@sections/PropertyHeroSection/index.astro';
import PropertyDetail from '@sections/PropertyDetailSection/index.astro';
import Footer from '@layouts/Footer/index.astro';
import { loadQuery } from '../../../studio/lib/load-query';

import { detailPageQuery, propertyQuery } from '@queries/index';
import type { HomePageType } from '@types-local/home';
import type { Property } from '@types-local/property';

// âœ… Prerender so Astro runs getStaticPaths at build
export const prerender = true;

// Generate static paths for properties
export async function getStaticPaths() {
  try {
    const { data: properties } = await loadQuery<
      { slug: { current: string } }[]
    >({
      query: `*[_type == "property" && defined(slug.current)] { slug }`,
    });

    return properties.map((property) => {
      // Strip "property/" prefix so Astro matches correctly
      const cleanSlug = property.slug.current.replace(/^property\//, '');
      return { params: { slug: cleanSlug } };
    });
  } catch (err) {
    console.error('Error in getStaticPaths:', err);
    throw new Response('Internal Server Error', { status: 500 });
  }
}

const { slug } = Astro.params;

const fullSlug = `property/${slug}`;

let property: Property | null = null;
let detailPage: HomePageType | null = null;

try {
  const { data } = await loadQuery<Property>({
    query: propertyQuery,
    params: { slug: fullSlug },
  });
  property = data;
} catch (err) {
  throw new Response('Internal Server Error', { status: 500 });
}

try {
  const { data } = await loadQuery<HomePageType>({
    query: detailPageQuery,
  });
  detailPage = data;
} catch (err) {
  throw new Response('Internal Server Error', { status: 500 });
}

if (!property) {
  throw new Response('Not Found', { status: 404 });
}

if (!detailPage) {
  throw new Response('Not Found', { status: 404 });
}

const { header, footer } = detailPage;
---

<BaseLayout title={property.title || 'Detail Page'}>
  <PropertyHeroSection {property} {header} />
  <PropertyDetail {property} />
  <Footer {...footer} />
</BaseLayout>
