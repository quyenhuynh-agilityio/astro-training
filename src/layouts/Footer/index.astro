---
import Button from '@components/Button';
import PortableText from '@components/PortableText/index.astro';
import PortableTextImage from '@components/PortableTextImage/index.astro';
import { portableTextToHref } from '@lib/utils';
import type { SanityImage } from '@types-local/common';

interface LinkItem {
  label: string;
  href: string;
}

interface Column {
  heading: string;
  links: LinkItem[];
}

interface SocialLink {
  url: string;
  icon: SanityImage;
}

interface FooterProps {
  logo?: SanityImage;
  columns: Column[];
  socialLinks?: SocialLink[];
  ctaText?: string;
}

const { logo, columns, socialLinks = [], ctaText } = Astro.props as FooterProps;
---

<footer class="bg-black text-white px-177 py-80">
  <div
    class="max-w-7xl mx-auto pb-12 flex flex-col md:flex-row items-center md:justify-between"
  >
    <h2 class="text-3xl md:text-4md font-bold text-white">
      Make your dreams a <span class="text-primary">reality</span>
    </h2>
    <Button size="large">
      <PortableText value={ctaText} />
    </Button>
  </div>

  <hr class="border-gray-700" />

  <div class="max-w-7xl mx-auto mt-60 flex justify-between">
    <div>
      {logo && <PortableTextImage node={logo} alt={logo.alt || ''} />}
      <div class="flex space-x-10 mt-30">
        {
          socialLinks.map((item, idx) => (
            <a
              key={idx}
              href={item?.url || ''}
              class="hover:text-primary transition"
            >
              {item.icon && (
                <PortableTextImage
                  node={item.icon}
                  alt={item.icon.alt || ''}
                  class="size-5"
                />
              )}
            </a>
          ))
        }
      </div>
    </div>

    {
      columns?.map((col, idx) => (
        <div key={idx}>
          <h3 class="font-semibold mb-4">{col.heading}</h3>
          <ul class="space-y-2 text-gray-400">
            {col.links.map((link, i) => {
              return (
                <li key={i}>
                  <a
                    href={portableTextToHref(link.label)}
                    class="hover:text-primary transition"
                  >
                    <PortableText value={link.label} />
                  </a>
                </li>
              );
            })}
          </ul>
        </div>
      ))
    }
  </div>
</footer>
