---
import Button from '@components/Button';
import PortableText from '@components/PortableText/index.astro';
import SanityImage from '@components/SanityImage/index.astro';
import { portableTextToHref } from '@lib/utils';
import type { SanityImageType } from '@types-local/common';

interface LinkItem {
  label: string;
  href: string;
}

interface Column {
  heading: string;
  links: LinkItem[];
}

interface SocialLink {
  url: string;
  icon: SanityImageType;
}

interface FooterProps {
  logo?: SanityImageType;
  columns: Column[];
  socialLinks?: SocialLink[];
  ctaText?: string;
}

const { logo, columns, socialLinks = [], ctaText } = Astro.props as FooterProps;
---

<footer class="bg-black px-177 py-80">
  <div
    class="max-w-7xl mx-auto pb-12 flex flex-col md:flex-row items-center md:justify-between"
  >
    <h2 class="text-3xl md:text-4md font-bold text-white">
      Make your dreams a <span class="text-primary">reality</span>
    </h2>
    <Button size="large" rightIcon="path">
      {ctaText}
    </Button>
  </div>

  <hr class="border-gray-700" />

  <div class="max-w-7xl mx-auto mt-60 flex justify-between">
    <div>
      <SanityImage
        node={logo}
        width={128}
        height={34}
        sizes="(max-width: 768px) 100vw, 128px"
        className="h-34 w-32 object-contain"
        loading="eager"
      />
      <div class="flex space-x-10 mt-30">
        {
          socialLinks.map((item) => (
            <a href={item?.url || ''} class="hover:text-primary transition">
              {item.icon && (
                <SanityImage
                  node={item.icon}
                  width={20}
                  height={20}
                  sizes="(max-width: 768px) 100vw, 20px"
                  className="w-5 h-5"
                  loading="lazy"
                />
              )}
            </a>
          ))
        }
      </div>
    </div>

    {
      columns?.map((col) => (
        <div>
          <h3 class="font-semibold mb-4">{col.heading}</h3>
          <ul class="space-y-2">
            {col.links.map((link) => (
              <li>
                <a
                  href={portableTextToHref(link.label)}
                  class="hover:text-primary text-white transition"
                >
                  <PortableText value={link.label} />
                </a>
              </li>
            ))}
          </ul>
        </div>
      ))
    }
  </div>
</footer>
